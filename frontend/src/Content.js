// frontend/src/Content.js

import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import './Content.css';

const tg = window.Telegram?.WebApp;
const BACKEND_URL = "https://miniback.karpix.com";

// --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –î–æ–±–∞–≤–∏–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∏–∫–æ–Ω–∫–∏ –∑–∞–º–∫–∞, —á—Ç–æ–±—ã –Ω–µ —Å—Ç–∞–≤–∏—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ ---
const LockIcon = ({ size = 32, color = 'white' }) => (
  <svg xmlns="http://www.w3.org/2000/svg" width={size} height={size} viewBox="0 0 24 24" fill="none" stroke={color} strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
    <rect x="3" y="11" width="18" height="11" rx="2" ry="2"></rect>
    <path d="M7 11V7a5 5 0 0 1 10 0v4"></path>
  </svg>
);

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏ –∫—É—Ä—Å–∞
const CourseCard = ({ course }) => {
  // –í–∞—à–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
  const getPreviewColor = (id) => {
    const colors = [
      'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
      'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)', 
      'linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)',
      'linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)',
      'linear-gradient(135deg, #fa709a 0%, #fee140 100%)',
      'linear-gradient(135deg, #a8edea 0%, #fed6e3 100%)',
    ];
    const index = id.length % colors.length;
    return colors[index];
  };

  const getStatusBadge = (rankRequired) => {
    if (rankRequired <= 1) return { text: '–î–æ—Å—Ç—É–ø–Ω–æ', color: '#28a745' };
    if (rankRequired <= 2) return { text: '–ù–æ–≤–∏—á–æ–∫+', color: '#ffc107' };
    if (rankRequired <= 3) return { text: '–í–µ—Ç–µ—Ä–∞–Ω', color: '#fd7e14' };
    return { text: '–õ–µ–≥–µ–Ω–¥–∞', color: '#dc3545' };
  };

  const status = getStatusBadge(course.rank_required);

  // --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –í—ã–Ω–æ—Å–∏–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, —á—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å ---
  const cardContent = (
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å .locked, –µ—Å–ª–∏ –∫—É—Ä—Å –Ω–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω
    <div className={`course-card ${!course.is_unlocked ? 'locked' : ''}`}>
      <div 
        className="course-preview"
        style={{ background: getPreviewColor(course.id) }}
      >
        <div className="course-preview-content">
          <div className="course-icon">üìö</div>
          {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–µ–π–¥–∂ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫—É—Ä—Å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω */}
          {course.is_unlocked && (
            <div className="rank-badge" style={{ backgroundColor: status.color }}>
              {status.text}
            </div>
          )}
        </div>
        
        {/* --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –î–æ–±–∞–≤–ª—è–µ–º –æ–≤–µ—Ä–ª–µ–π —Å –∑–∞–º–∫–æ–º --- */}
        {!course.is_unlocked && (
          <div className="course-lock-overlay">
            <LockIcon />
            <p className="lock-overlay-text">Private Course</p>
          </div>
        )}
      </div>

      <div className="course-content">
        <h3 className="course-title">{course.title}</h3>
        <p className="course-description">
          {course.description || '–ò–∑—É—á–∏—Ç–µ –æ—Å–Ω–æ–≤—ã –∏ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏. –ü–æ–ª—É—á–∏—Ç–µ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏ –∏ –∑–Ω–∞–Ω–∏—è.'}
        </p>

        <div className="course-progress">
          <div className="progress-info">
            <span className="progress-text">{course.progress}% –∑–∞–≤–µ—Ä—à–µ–Ω–æ</span>
            <span className="lessons-count">{course.total_lessons} —É—Ä–æ–∫–æ–≤</span>
          </div>
          <div className="progress-bar">
            <div className="progress-fill" style={{ width: `${course.progress}%` }}></div>
          </div>
        </div>

        <div className="course-meta">
          <span className="course-difficulty">
            <span className="meta-icon">‚≠ê</span>
            –†–∞–Ω–≥ {course.rank_required}
          </span>
          <span className="course-duration">
            <span className="meta-icon">üìñ</span>
            {course.completed_lessons}/{course.total_lessons}
          </span>
        </div>
      </div>
    </div>
  );

  // --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –£—Å–ª–æ–≤–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Å—Å—ã–ª–∫–∏ ---
  // –ï—Å–ª–∏ –∫—É—Ä—Å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω, –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ Link, –∏–Ω–∞—á–µ - –≤ –ø—Ä–æ—Å—Ç–æ–π div
  return course.is_unlocked ? (
    <Link to={`/course/${course.id}`} className="course-card-link">
      {cardContent}
    </Link>
  ) : (
    <div className="course-card-link">
      {cardContent}
    </div>
  );
};

// --- –í–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Content –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π ---
function Content() {
  const [courses, setCourses] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchContent = async () => {
      if (!tg?.initData) {
        setError("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç–∫—Ä—ã—Ç–æ –≤ Telegram.");
        setLoading(false);
        return;
      }

      try {
        const response = await fetch(`${BACKEND_URL}/api/courses`, {
          headers: { 'X-Init-Data': tg.initData }
        });
        
        if (!response.ok) {
          if (response.status === 401) throw new Error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.');
          if (response.status === 403) throw new Error('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã —É—á–∞—Å—Ç–Ω–∏–∫ –∫–∞–Ω–∞–ª–∞.');
          throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫—É—Ä—Å—ã');
        }
        
        const data = await response.json();
        setCourses(data);
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫—É—Ä—Å–æ–≤:", error);
        setError(error.message);
      } finally {
        setLoading(false);
      }
    };

    fetchContent();
  }, []);

  if (loading) {
    return (
      <div className="content-container">
        <div className="content-header"><h2>üìö –û–±—É—á–∞—é—â–∏–µ –∫—É—Ä—Å—ã</h2></div>
        <div className="loading-state"><div className="loader">–ó–∞–≥—Ä—É–∑–∫–∞ –∫—É—Ä—Å–æ–≤...</div></div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="content-container">
        <div className="content-header"><h2>üìö –û–±—É—á–∞—é—â–∏–µ –∫—É—Ä—Å—ã</h2></div>
        <div className="error-state">
          <p>‚ùå {error}</p>
          <button onClick={() => window.location.reload()} style={{ padding: '10px 20px', background: '#007bff', color: 'white', border: 'none', borderRadius: '5px', marginTop: '10px', cursor: 'pointer' }}>
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="content-container">
      <div className="content-header">
        <h2>üìö –û–±—É—á–∞—é—â–∏–µ –∫—É—Ä—Å—ã</h2>
        <p className="content-subtitle">–†–∞–∑–≤–∏–≤–∞–π—Ç–µ –Ω–∞–≤—ã–∫–∏, –ø–æ–≤—ã—à–∞–π—Ç–µ —Ä–∞–Ω–≥ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –Ω–æ–≤–æ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç—É</p>
      </div>

      {courses.length > 0 ? (
        <div className="courses-grid">
          {courses.map((course) => (
            <CourseCard key={course.id} course={course} />
          ))}
        </div>
      ) : (
        <div className="empty-state">
          <div className="empty-icon">üîí</div>
          <h3>–ü–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫—É—Ä—Å–æ–≤</h3>
          <p>–ü–æ–≤—ã—à–∞–π—Ç–µ —Å–≤–æ–π —Ä–∞–Ω–≥, —É—á–∞—Å—Ç–≤—É—è –≤ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è—Ö –∫–∞–Ω–∞–ª–∞, —á—Ç–æ–±—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç!</p>
        </div>
      )}
    </div>
  );
}

export default Content;
