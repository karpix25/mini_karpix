import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import './CourseOverview.css';

const tg = window.Telegram?.WebApp;
const BACKEND_URL = "https://miniback.karpix.com";

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ —É—Ä–æ–∫–∞ –≤ —Å–ø–∏—Å–∫–µ
const LessonListItem = ({ lesson, isUnlocked, onLessonClick }) => {
  return (
    <li
      className={`lesson-list-item ${!isUnlocked ? 'locked' : ''} ${lesson.completed ? 'completed' : ''}`}
      onClick={() => isUnlocked && onLessonClick(lesson.id)}
    >
      <span className="lesson-item-number">{lesson.sort_order}.</span> {/* –ù—É–º–µ—Ä–∞—Ü–∏—è —É—Ä–æ–∫–∞ */}
      <span className="lesson-item-title">{lesson.title}</span>
      {/* –ï—Å–ª–∏ –Ω—É–∂–Ω—ã –∏–∫–æ–Ω–∫–∏ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–¥–µ—Å—å */}
      {/* {!isUnlocked ? 'üîí' : lesson.completed ? '‚úÖ' : ''} */}
      {/* <span className="lesson-item-duration">5 –º–∏–Ω</span> */} {/* –ï—Å–ª–∏ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω—É–∂–Ω–∞ */}
    </li>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–µ–∫—Ü–∏–∏ –∫—É—Ä—Å–∞
const CourseSection = ({ section, onLessonClick, userRankLevel }) => {
  // –õ–æ–≥–∏–∫–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Å–µ–∫—Ü–∏–∏ (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ)
  const isSectionUnlocked = true; // –ü–æ–∫–∞ –≤—Å–µ–≥–¥–∞ true, –µ—Å–ª–∏ –∫—É—Ä—Å –¥–æ—Å—Ç—É–ø–µ–Ω
  
  return (
    <div className="course-section-group">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏, –µ—Å–ª–∏ –æ–Ω –Ω—É–∂–µ–Ω –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è, –Ω–æ –Ω–µ –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ */}
      {section.title && <h3 className="course-section-title">{section.title}</h3>}
      
      <ol className="section-lessons-list">
        {section.lessons.map((lesson) => (
          <LessonListItem 
            key={lesson.id}
            lesson={lesson}
            isUnlocked={isSectionUnlocked && (lesson.rank_required <= userRankLevel)} // –ü—Ä–∏–º–µ—Ä –ª–æ–≥–∏–∫–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —É—Ä–æ–∫–∞
            onLessonClick={onLessonClick}
          />
        ))}
      </ol>
    </div>
  );
};

function CourseOverview() {
  const { courseId } = useParams();
  const navigate = useNavigate();
  const [course, setCourse] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [userRankLevel, setUserRankLevel] = useState(1); 

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram BackButton
  useEffect(() => {
    if (tg) {
      tg.BackButton.show();
      const onBackClick = () => navigate('/content'); 
      tg.BackButton.onClick(onBackClick);
      return () => tg.BackButton.offClick(onBackClick);
    }
  }, [navigate]);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∫—É—Ä—Å–∞
  useEffect(() => {
    const fetchCourseData = async () => {
      if (!tg?.initData) {
        setError("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç–∫—Ä—ã—Ç–æ –≤ Telegram.");
        setLoading(false);
        return;
      }

      try {
        const headers = { 'X-Init-Data': tg.initData };
        
        const userResponse = await fetch(`${BACKEND_URL}/api/me`, { headers });
        if (userResponse.ok) {
          const userData = await userResponse.json();
          const rankLevel = Math.floor((userData.points || 0) / 50) + 1;
          setUserRankLevel(Math.min(rankLevel, 4)); 
        }

        const courseResponse = await fetch(`${BACKEND_URL}/api/courses/${courseId}`, { headers });
        
        if (!courseResponse.ok) {
          if (courseResponse.status === 404) { throw new Error('–ö—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω'); }
          if (courseResponse.status === 403) { throw new Error('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫—É—Ä—Å—É'); }
          throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫—É—Ä—Å');
        }
        
        const courseData = await courseResponse.json();
        setCourse(courseData);
        
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫—É—Ä—Å–∞:', error);
        setError(error.message);
      } finally {
        setLoading(false);
      }
    };

    fetchCourseData();
  }, [courseId]);

  const handleLessonClick = (lessonId) => {
    navigate(`/course/${courseId}/lesson/${lessonId}`);
  };

  if (loading) {
    return (
      <div className="course-overview-container common-loading-error-state">
        <div className="loading-spinner"></div>
        <p>–ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∫—É—Ä—Å...</p>
      </div>
    );
  }

  if (error) {
    return (
      <div className="course-overview-container common-loading-error-state">
        <h2>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h2>
        <p>{error}</p>
        <button onClick={() => navigate('/content')} className="back-button">
          ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫—É—Ä—Å–∞–º
        </button>
      </div>
    );
  }

  if (!course) {
    return (
      <div className="course-overview-container common-loading-error-state">
        <h2>–ö—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω</h2>
        <button onClick={() => navigate('/content')} className="back-button">
          ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫—É—Ä—Å–∞–º
        </button>
      </div>
    );
  }

  const progressPercentage = course.progress || 0;

  return (
    <div className="course-overview-container">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫—É—Ä—Å–∞ (–∫–∞–∫ –Ω–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–µ KontentEngine.io) */}
      <div className="course-simple-header">
        <h1 className="course-simple-title">{course.title}</h1>
        {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä (–∫–∞–∫ –Ω–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–µ) */}
        <div className="course-simple-progress-bar">
          <div 
            className="course-simple-progress-fill" 
            style={{ width: `${progressPercentage}%` }}
          ></div>
        </div>
      </div>

      {/* –°–ø–∏—Å–æ–∫ —Å–µ–∫—Ü–∏–π/—É—Ä–æ–∫–æ–≤ */}
      <div className="course-sections-list-wrapper">
        {course.sections?.map((section) => (
          <CourseSection
            key={section.id}
            section={section}
            onLessonClick={handleLessonClick}
            userRankLevel={userRankLevel} 
          />
        ))}
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç—É–ø–µ - —É–¥–∞–ª–∏—Ç—å, –µ—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–∞ */}
      {/* <div className="access-info">
        <p className="access-text">
          üí° –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –æ—á–∫–∏ –≤ –∫–∞–Ω–∞–ª–µ, —á—Ç–æ–±—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–µ –∫—É—Ä—Å—ã
        </p>
      </div> */}
    </div>
  );
}

export default CourseOverview;
